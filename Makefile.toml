[env]
RUST_ESP32_STD_DEMO_WIFI_SSID = "Devins hotspot"
RUST_ESP32_STD_DEMO_WIFI_PASS = "eeeeeeee"
RUSTUP_TOOLCHAIN = "esp"

[tasks.default]
dependencies = ["build"]

[tasks.toolchain-init]
command = "./toolchain-deps/init-toolchain.sh"

[tasks.toolchain-env]
command = "./toolchain-deps/env-toolchain.sh"
dependencies = ["toolchain-init"]

[tasks.build]
env_files = [ "./toolchain-deps/espressif.env" ]
command = "cargo"
args = ["build", "-Zconfigurable-env", "-Zextra-link-arg"]
dependencies = ["toolchain-env"]

[tasks.flash]
install_crate = "espflash"
command = "espflash"
args = ["/dev/ttyUSB0", "target/xtensa-esp32-espidf/debug/${CARGO_MAKE_CRATE_NAME}"]
#dependencies = ["build"]

[tasks.run]
install_crate = "espmonitor"
command = "espmonitor"
args = ["--speed", "115200", "/dev/ttyUSB0"]
dependencies = ["flash"]

[tasks.watch-remote]
command = "./build_remote.sh"
args = ["notroot", "ssh.pohldev.in", "/home/notroot/Desktop/esp32/target/xtensa-esp32-espidf/debug/${CARGO_MAKE_CRATE_NAME}", "target/xtensa-esp32-espidf/debug/${CARGO_MAKE_CRATE_NAME}"]

[tasks.test]
# Note: tests may not be possible, or even required
#       tests would be nice, but I'm pretty sure we'd have to do some mixed-platform stuff
disabled = true

[tasks.format]
# we need to do this with +esp or else cargo complains about unused keys
install_crate = false
command = "cargo"
args = ["fmt"]
dependencies = ["toolchain-env"]
[tasks.fmt]
alias="format"

[tasks.check]
env_files = [ "./toolchain-deps/espressif.env" ]
command = "cargo"
args = ["check", "-Zconfigurable-env", "-Zextra-link-arg", "${@}"]
dependencies = ["toolchain-env"]

[tasks.fix]
install_crate = false
env_files = [ "./toolchain-deps/espressif.env" ]
command = "cargo"
args = ["fix", "-Zconfigurable-env", "-Zextra-link-arg", "${@}"]
dependencies = ["toolchain-env"]

[tasks.clippy]
install_crate = { rustup_component_name = "clippy" }
env_files = [ "./toolchain-deps/espressif.env" ]
command = "cargo"
args = ["clippy", "-Zconfigurable-env", "-Zextra-link-arg", "--package", "${CARGO_MAKE_CRATE_NAME}", "${@}"]
dependencies = ["toolchain-env"]